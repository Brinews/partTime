import java.sql.*;
import java.util.*;
import java.util.Date;
import java.text.*;

public class MalWareMain
{
	MySqlProxy mySql = new MySqlProxy();

	public MalWareMain()
	{
	}

	public void malwareCreate()
	{
		try {
			mySql.spyConnectDB();

			String str = " DROP TABLE IF EXISTS `d_reg_file_a`";
			mySql.spyDoUpdate(str);	

			str = " CREATE TABLE `d_reg_file_a` (`id` int(5) NOT NULL AUTO_INCREMENT, `date` date NOT NULL, `time` time NOT NULL, `host_id` int(5) NOT NULL, `type` int(5) NOT NULL, `process` varchar(100) NOT NULL, `operation` varchar(100) DEFAULT NULL, `path` varchar(300) DEFAULT NULL, `result` varchar(100) DEFAULT NULL, `detail` varchar(300) DEFAULT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=5156 DEFAULT CHARSET=utf8 ";
			mySql.spyDoUpdate(str);

			mySql.spyCloseConnection();
		}
		catch (Exception e)
		{
			System.out.println("Exception: "+ e.getMessage());
		}
	}

	public void malwareFilter()
	{
		try {
			String str = "insert into d_reg_file_a select * from d_reg_file where concat(type, process, operation, path, result, detail) in (select concat(type, process, operation, path, result, detail) from d_reg_file group by concat(type, process, operation, path, result, detail) having count(*) > 8) ";
			mySql.spyConnectDB();

			mySql.spyDoUpdate(str);	

			mySql.spyCloseConnection();
		}
		catch (Exception e)
		{
			System.out.println("Exception: "+ e.getMessage());
		}
	}

	public static void main(String[] args)
	{

		MalWareMain mwm = new MalWareMain();
		mwm.malwareCreate();
		mwm.malwareFilter();
	}
}
